<!--
    JBoss, Home of Professional Open Source
    Copyright 2012, Red Hat, Inc. and/or its affiliates, and individual
    contributors by the @authors tag. See the copyright.txt in the 
    distribution for a full listing of individual contributors.
    
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,  
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
 -->
<f:view xmlns="http://www.w3.org/1999/xhtml"  xmlns:f="http://java.sun.com/jsf/core" xmlns:h="http://java.sun.com/jsf/html" xmlns:cu="http://csrf-test">
    <!-- the f:view above prevents an erroneous <html> within <body> coming from portal. -->
    <!-- <h:head /> and <h:body> in the following are always needed otherwise JSF Facelets won't work -->
    <h:head />
    <h:body styleClass="jsf2HelloWorldPortlet">
        <h:outputStylesheet library="css" name="jsf2-hello-world-portlet.css" />
        <h2>JSF2 Hello World Portlet -csrf 1</h2>
        <p>
            This example demonstrates adding ajax processing and updating to a standard JSF component.
        </p>
        <p>
            In the example below, we have a standard JSF inputText with a nested ajax tag. This ajax tag
            triggers an ajax request on every "keyup" event from the input box. The value of the input box is sent
            to the server where the backing bean is updated, and the "output" panelGroup is re-rendered, without
            requiring a full-page refresh.
        </p>
        <p>
            The form labels and buttons use localized labels from resource bundles which we have declared in 
            WEB-INF/faces-config.xml
        </p>
        <p>
            To see this example in action, begin typing in the input box, and watch as your text is echoed with
            html generated from the application server using an ajax call.
        </p>
        <h:form id="jsf2HelloWorldPortlet">
            <h:outputLabel value="#{msgs.Name}" for="nameInput"/>
            <h:inputText id="nameInput" value="#{helloBean.name}">
                <f:ajax render="output" event="keyup"/>
            </h:inputText>
            <br />
            
            <p>
                <h:panelGroup id="output">
                    <strong>
                        <h:outputFormat value="#{msgs.Hello_0}" rendered="#{not empty helloBean.name}">
                            <f:param value="#{helloBean.name}" />
                        </h:outputFormat>
                    </strong>
                </h:panelGroup>
            </p>
            
            <h:commandButton id="action" value="Action" actionListener="#{helloBean.myAction}"/> - Do some action
            <br />
            
            <h:messages />
            
            <input type="hidden" name="CSRFTOKEN_NAME" value="#{CSRFTOKEN_NAME}" />
        </h:form>
    </h:body>
</f:view>